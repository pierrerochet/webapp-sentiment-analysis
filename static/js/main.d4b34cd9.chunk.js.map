{"version":3,"sources":["theme.js","components/Note.js","util.js","components/Intro.js","components/Footer.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["primaryColor","theme","createTheme","typography","allVariants","color","palette","text","primary","secondary","main","displayEmojisNote","sentiment","className","style","displayStarsNote","map","item","Note","Typography","align","value","a","fetch","method","body","JSON","stringify","headers","res","json","Intro","withTheme","props","paragraph","Footer","gitHubName","linkedInName","gitHubUrl","linkedInUrl","Button","variant","size","endIcon","MainRaw","state","textAreaValue","noteStyle","handleAreaValueChange","bind","handleNoteStyleChange","event","target","this","setState","getSentiment","then","response","sent","ml_tags","label","secondaryColor","background","TextField","onChange","multiline","rows","placeholder","autoFocus","display","Switch","checked","check","Component","Main","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4b34cd9.chunk.js","sourcesContent":["import { createTheme } from \"@material-ui/core/styles\";\r\n\r\nconst primaryColor = \"#C39BD3\";\r\nconst theme = createTheme({\r\n  typography: {\r\n    allVariants: {\r\n      color: \"#ffffff\",\r\n    },\r\n  },\r\n  palette: {\r\n    text: {\r\n      primary: primaryColor,\r\n      secondary: \"#ffffff\",\r\n    },\r\n    primary: {\r\n      main: primaryColor,\r\n    },\r\n    secondary: {\r\n      main: \"#5D6D7E\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\r\nimport SentimentDissatisfiedIcon from \"@material-ui/icons/SentimentDissatisfied\";\r\nimport SentimentSatisfiedIcon from \"@material-ui/icons/SentimentSatisfied\";\r\nimport SentimentSatisfiedAltIcon from \"@material-ui/icons/SentimentSatisfiedAlt\";\r\nimport SentimentVerySatisfiedIcon from \"@material-ui/icons/SentimentVerySatisfied\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"../css/Note.css\";\r\n\r\nfunction displayEmojisNote(sentiment) {\r\n  return (\r\n    <div>\r\n      <SentimentVeryDissatisfiedIcon\r\n        className={sentiment === 1 ? \"emoji-enabled\" : \"emoji-desabled\"}\r\n        style={{ color: \"red\" }}\r\n      />\r\n\r\n      <SentimentDissatisfiedIcon\r\n        className={sentiment === 2 ? \"emoji-enabled\" : \"emoji-desabled\"}\r\n        style={{ color: \"orange\" }}\r\n      />\r\n\r\n      <SentimentSatisfiedIcon\r\n        className={sentiment === 3 ? \"emoji-enabled\" : \"emoji-desabled\"}\r\n        style={{ color: \"lightBlue\" }}\r\n      />\r\n\r\n      <SentimentSatisfiedAltIcon\r\n        className={sentiment === 4 ? \"emoji-enabled\" : \"emoji-desabled\"}\r\n        style={{ color: \"lightGreen\" }}\r\n      />\r\n\r\n      <SentimentVerySatisfiedIcon\r\n        className={sentiment === 5 ? \"emoji-enabled\" : \"emoji-desabled\"}\r\n        style={{ color: \"green\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction displayStarsNote(sentiment) {\r\n  return (\r\n    <div>\r\n      {[1, 2, 3, 4, 5].map((item) => {\r\n        return sentiment >= item ? (\r\n          <StarIcon className=\"star\" key={item} />\r\n        ) : (\r\n          <StarBorderIcon className=\"star\" key={item} />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Note({ sentiment, style }) {\r\n  return (\r\n    <div>\r\n      <Typography align=\"center\">Score given by the algorithm :</Typography>\r\n      <div className=\"note-items\">\r\n        {style == \"emojis\"\r\n          ? displayEmojisNote(sentiment)\r\n          : displayStarsNote(sentiment)}\r\n      </div>\r\n      <Typography align=\"center\">{sentiment} / 5</Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Note;\r\n","import fetch from \"node-fetch\";\r\n\r\nexport async function getSentiment(value) {\r\n  const url = 'http://ec2-15-236-60-229.eu-west-3.compute.amazonaws.com/api/v1/sentiment/predict'\r\n  const res = await fetch(url, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ text: value }),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  return await res.json();\r\n}\r\n","import { withTheme } from \"@material-ui/core/styles\";\r\nimport \"../css/Intro.css\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction IntroRaw(props) {\r\n  const primaryColor = props.theme.palette.primary.main;\r\n  return (\r\n    <div className=\"intro\">\r\n      <Typography align=\"center\" paragraph>\r\n        Sentiment analysis is primarily a part of{\" \"}\r\n        <span style={{ color: primaryColor }}>Marketing Strategies</span> to\r\n        monitor the branding of a product, service or business.\r\n      </Typography>\r\n      <Typography align=\"center\" paragraph>\r\n        Below is the demonstration of a{\" \"}\r\n        <span style={{ color: primaryColor }}>Machine Learning</span> algorithm\r\n        trained on several thousand French comments from the online shopping\r\n        platform Amazon.\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Intro = withTheme(IntroRaw);\r\nexport default Intro;\r\n","import GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport \"../css/Footer.css\";\r\n\r\nfunction Footer(props) {\r\n  const { gitHubName, gitHubUrl, linkedInName, linkedInUrl } = props;\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"network-list\">\r\n        <Button\r\n          className=\"network-button\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          endIcon={<LinkedInIcon />}\r\n        >\r\n          {linkedInName}\r\n        </Button>\r\n\r\n        <Button\r\n          className=\"network-button\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          endIcon={<GitHubIcon />}\r\n        >\r\n          {gitHubName}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import Note from \"./Note\";\r\nimport { getSentiment } from \"../util\";\r\nimport Intro from \"./Intro\";\r\nimport Footer from \"./Footer\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { Component } from \"react\";\r\nimport { withTheme } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport \"../css/Main.css\";\r\n\r\nclass MainRaw extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      textAreaValue: \"\",\r\n      sentiment: null,\r\n      noteStyle: true,\r\n    };\r\n    this.handleAreaValueChange = this.handleAreaValueChange.bind(this);\r\n    this.handleNoteStyleChange = this.handleNoteStyleChange.bind(this);\r\n  }\r\n\r\n  handleAreaValueChange(event) {\r\n    const value = event.target.value;\r\n    this.setState({ textAreaValue: value });\r\n    if (value === \"\") {\r\n      this.setState({ sentiment: null });\r\n    } else {\r\n      getSentiment(value).then((response) => {\r\n        const sent = response.ml_tags.sentiment.label;\r\n        this.setState({ sentiment: sent });\r\n      });\r\n    }\r\n  }\r\n\r\n  handleNoteStyleChange() {\r\n    this.setState({ noteStyle: !this.state.noteStyle });\r\n  }\r\n\r\n  render() {\r\n    const sentiment = this.state.sentiment;\r\n    const noteStyle = this.state.noteStyle ? \"stars\" : \"emojis\";\r\n    const secondaryColor = this.props.theme.palette.secondary.main;\r\n    const primaryColor = this.props.theme.palette.primary.main;\r\n\r\n    return (\r\n      <div className=\"main\" style={{ background: secondaryColor }}>\r\n        <Typography variant=\"h3\" align=\"center\" className=\"title\">\r\n          Sentiment Analysis\r\n        </Typography>\r\n\r\n        <Intro />\r\n        <Typography align=\"center\">\r\n          Enter a comment in <span style={{ color: primaryColor }}>French</span>{\" \"}\r\n          to test the service :\r\n        </Typography>\r\n\r\n        <TextField\r\n          value={this.state.textAreaValue}\r\n          onChange={this.handleAreaValueChange}\r\n          multiline\r\n          className=\"input-text\"\r\n          rows={4}\r\n          placeholder=\"Ex. Produit conforme à la description\"\r\n          autoFocus\r\n          variant=\"outlined\"\r\n        />\r\n\r\n        <div>\r\n          <Typography display=\"inline\">stars</Typography>\r\n          <Switch\r\n            color=\"primary\"\r\n            checked={this.state.check}\r\n            onChange={this.handleNoteStyleChange}\r\n            size=\"medium\"\r\n          />\r\n          <Typography display=\"inline\">emojis</Typography>\r\n        </div>\r\n\r\n        <Note sentiment={sentiment} style={noteStyle} />\r\n        <Footer gitHubName=\"pierrerochet\" linkedInName=\"Pierre Rochet\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Main = withTheme(MainRaw);\r\nexport default Main;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <Main />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}