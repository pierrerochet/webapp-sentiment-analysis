{"version":3,"sources":["theme.js","components/Note.js","util.js","components/Intro.js","components/Footer.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["primaryColor","theme","createTheme","typography","allVariants","color","palette","text","primary","secondary","main","displayEmojisNote","sentiment","className","style","displayStarsNote","map","item","Note","Typography","align","httpsAgent","https","Agent","rejectUnauthorized","value","a","url","process","REACT_APP_API_ENDPOINT","console","log","fetch","method","body","JSON","stringify","headers","agent","res","json","Intro","withTheme","props","paragraph","Footer","gitHubName","linkedInName","Button","variant","size","endIcon","MainRaw","state","textAreaValue","noteStyle","handleAreaValueChange","bind","handleNoteStyleChange","event","target","this","setState","getSentiment","then","response","sent","ml_tags","label","secondaryColor","REACT_APP_GITHUB_NAME","REACT_APP_LINKEDIN_NAME","background","TextField","onChange","multiline","rows","placeholder","autoFocus","display","Switch","checked","check","Component","Main","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0d8a289.chunk.js","sourcesContent":["import { createTheme } from \"@material-ui/core/styles\";\n\nconst primaryColor = \"#7CD06A\";\nconst theme = createTheme({\n  typography: {\n    allVariants: {\n      color: \"#ffffff\",\n    },\n  },\n  palette: {\n    text: {\n      primary: primaryColor,\n      secondary: \"#ffffff\",\n    },\n    primary: {\n      main: primaryColor,\n    },\n    secondary: {\n      main: \"#5D6D7E\",\n    },\n  },\n});\n\nexport default theme;\n","import SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport SentimentDissatisfiedIcon from \"@material-ui/icons/SentimentDissatisfied\";\nimport SentimentSatisfiedIcon from \"@material-ui/icons/SentimentSatisfied\";\nimport SentimentSatisfiedAltIcon from \"@material-ui/icons/SentimentSatisfiedAlt\";\nimport SentimentVerySatisfiedIcon from \"@material-ui/icons/SentimentVerySatisfied\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"../css/Note.css\";\n\nfunction displayEmojisNote(sentiment) {\n  return (\n    <div>\n      <SentimentVeryDissatisfiedIcon\n        className={sentiment === 1 ? \"emoji-enabled\" : \"emoji-desabled\"}\n        style={{ color: \"red\" }}\n      />\n\n      <SentimentDissatisfiedIcon\n        className={sentiment === 2 ? \"emoji-enabled\" : \"emoji-desabled\"}\n        style={{ color: \"orange\" }}\n      />\n\n      <SentimentSatisfiedIcon\n        className={sentiment === 3 ? \"emoji-enabled\" : \"emoji-desabled\"}\n        style={{ color: \"lightBlue\" }}\n      />\n\n      <SentimentSatisfiedAltIcon\n        className={sentiment === 4 ? \"emoji-enabled\" : \"emoji-desabled\"}\n        style={{ color: \"lightGreen\" }}\n      />\n\n      <SentimentVerySatisfiedIcon\n        className={sentiment === 5 ? \"emoji-enabled\" : \"emoji-desabled\"}\n        style={{ color: \"green\" }}\n      />\n    </div>\n  );\n}\n\nfunction displayStarsNote(sentiment) {\n  return (\n    <div>\n      {[1, 2, 3, 4, 5].map((item) => {\n        return sentiment >= item ? (\n          <StarIcon className=\"star\" key={item} />\n        ) : (\n          <StarBorderIcon className=\"star\" key={item} />\n        );\n      })}\n    </div>\n  );\n}\n\nfunction Note({ sentiment, style }) {\n  return (\n    <div>\n      <Typography align=\"center\">Score given by the algorithm :</Typography>\n      <div className=\"note-items\">\n        {style === \"emojis\"\n          ? displayEmojisNote(sentiment)\n          : displayStarsNote(sentiment)}\n      </div>\n      <Typography align=\"center\">{sentiment} / 5</Typography>\n    </div>\n  );\n}\n\nexport default Note;\n","import fetch from \"node-fetch\";\nimport https from \"https\";\n\nconst httpsAgent = new https.Agent({\n  rejectUnauthorized: false,\n});\n\nexport async function getSentiment(value) {\n  const url = process.env.REACT_APP_API_ENDPOINT + \"/api/v1/sentiment/predict\";\n  console.log(url);\n  const res = await fetch(url, {\n    method: \"POST\",\n    body: JSON.stringify({ text: value }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    agent: httpsAgent,\n  });\n  return await res.json();\n}\n","import { withTheme } from \"@material-ui/core/styles\";\nimport \"../css/Intro.css\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction IntroRaw(props) {\n  const primaryColor = props.theme.palette.primary.main;\n  return (\n    <div className=\"intro\">\n      <Typography align=\"center\" paragraph>\n        Sentiment analysis is primarily a part of{\" \"}\n        <span style={{ color: primaryColor }}>Marketing Strategies</span> to\n        monitor the branding of a product, service or business.\n      </Typography>\n      <Typography align=\"center\" paragraph>\n        Below is the demonstration of a{\" \"}\n        <span style={{ color: primaryColor }}>Machine Learning</span> algorithm\n        trained on several thousand French comments from the online shopping\n        platform Amazon.\n      </Typography>\n    </div>\n  );\n}\n\nconst Intro = withTheme(IntroRaw);\nexport default Intro;\n","import GitHubIcon from \"@material-ui/icons/GitHub\";\nimport Button from \"@material-ui/core/Button\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport \"../css/Footer.css\";\n\nfunction Footer(props) {\n  const { gitHubName, linkedInName } = props;\n  return (\n    <div className=\"footer\">\n      <div className=\"network-list\">\n        <Button\n          className=\"network-button\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          endIcon={<LinkedInIcon />}\n        >\n          {linkedInName}\n        </Button>\n\n        <Button\n          className=\"network-button\"\n          variant=\"outlined\"\n          color=\"primary\"\n          size=\"small\"\n          endIcon={<GitHubIcon />}\n        >\n          {gitHubName}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import Note from \"./Note\";\nimport { getSentiment } from \"../util\";\nimport Intro from \"./Intro\";\nimport Footer from \"./Footer\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { Component } from \"react\";\nimport { withTheme } from \"@material-ui/core/styles\";\nimport \"../css/Main.css\";\n\nclass MainRaw extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textAreaValue: \"\",\n      sentiment: null,\n      noteStyle: true,\n    };\n    this.handleAreaValueChange = this.handleAreaValueChange.bind(this);\n    this.handleNoteStyleChange = this.handleNoteStyleChange.bind(this);\n  }\n\n  handleAreaValueChange(event) {\n    const value = event.target.value;\n    this.setState({ textAreaValue: value });\n    if (value === \"\") {\n      this.setState({ sentiment: null });\n    } else {\n      getSentiment(value).then((response) => {\n        const sent = response.ml_tags.sentiment.label;\n        this.setState({ sentiment: sent });\n      });\n    }\n  }\n\n  handleNoteStyleChange() {\n    this.setState({ noteStyle: !this.state.noteStyle });\n  }\n\n  render() {\n    const sentiment = this.state.sentiment;\n    const noteStyle = this.state.noteStyle ? \"stars\" : \"emojis\";\n    const secondaryColor = this.props.theme.palette.secondary.main;\n    const primaryColor = this.props.theme.palette.primary.main;\n\n    const gitHubName = process.env.REACT_APP_GITHUB_NAME;\n    const linkedInName = process.env.REACT_APP_LINKEDIN_NAME;\n    console.log(gitHubName);\n\n    return (\n      <div className=\"main\" style={{ background: secondaryColor }}>\n        <Typography variant=\"h3\" align=\"center\" className=\"title\">\n          Sentiment Analysis\n        </Typography>\n\n        <Intro />\n        <Typography align=\"center\">\n          Enter a comment in <span style={{ color: primaryColor }}>French</span>{\" \"}\n          to test the service :\n        </Typography>\n\n        <TextField\n          value={this.state.textAreaValue}\n          onChange={this.handleAreaValueChange}\n          multiline\n          className=\"input-text\"\n          rows={4}\n          placeholder=\"Ex. Produit conforme à la description\"\n          autoFocus\n          variant=\"outlined\"\n        />\n\n        <div>\n          <Typography display=\"inline\">stars</Typography>\n          <Switch\n            color=\"primary\"\n            checked={this.state.check}\n            onChange={this.handleNoteStyleChange}\n            size=\"medium\"\n          />\n          <Typography display=\"inline\">emojis</Typography>\n        </div>\n\n        <Note sentiment={sentiment} style={noteStyle} />\n        <Footer gitHubName={gitHubName} linkedInName={linkedInName} />\n      </div>\n    );\n  }\n}\n\nconst Main = withTheme(MainRaw);\nexport default Main;\n","import \"./App.css\";\nimport React from \"react\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <Main />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}